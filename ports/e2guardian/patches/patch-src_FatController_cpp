$OpenBSD$

Index: src/FatController.cpp
--- src/FatController.cpp.orig
+++ src/FatController.cpp
@@ -1071,7 +1071,7 @@ void log_listener(std::string log_location, bool logco
                             postdata + "\"";
                 break;
             case 1:
-                builtline = when + " " + who + " " + from + " " + where + " " + what + " "
+                builtline = (!logsyslog ? when + " " : "") + who + " " + from + " " + where + " " + what + " "
                             + how + " " + ssize + " " + sweight + " " + cat + " " + stringgroup + " "
                             + stringcode + " " + mimetype + " " + clienthost + " " + groupname + " "
                             + useragent + " " + params + " " + o.logid_1 + " " + o.logid_2 + " " + postdata;
@@ -1112,7 +1112,7 @@ void log_listener(std::string log_location, bool logco
         if (!logsyslog)
             *logfile << builtline << std::endl; // append the line
         else
-            syslog(LOG_INFO, "%s", builtline.c_str());
+            syslog(LOG_LOCAL0|LOG_INFO, "%s", builtline.c_str());
 
         //    delete ipcpeersock; // close the connection
 
@@ -2026,12 +2026,11 @@ int fc_controlit()   //
             gentlereload = false;
             continue;        //  OK to continue even if gentle failed - just continue to use previous lists
         }
-        timeout.tv_sec = 5;
-        timeout.tv_nsec = (long) 0;
-        rc = sigtimedwait(&signal_set, NULL, &timeout);
-        if (rc < 0) {
+        // OpenBSD does not have sigtimedwait(), sigwait() does not return until a signal arrives
+        int retval = sigwait(&signal_set, &rc);
+        if (retval < 0) {
             if (errno != EAGAIN) {
-                syslog(LOG_INFO, "Unexpected error from sigtimedwait() %d %s", errno, strerror(errno));
+                syslog(LOG_INFO, "Unexpected error from sigwait() %d %s", errno, strerror(errno));
             }
         } else {
             if (rc == SIGUSR1)
@@ -2044,7 +2043,7 @@ int fc_controlit()   //
             std::cout << "signal:" << rc << std::endl;
 #endif
             if (o.logconerror) {
-                syslog(LOG_INFO, "sigtimedwait() signal %d recd:", rc);
+                syslog(LOG_INFO, "sigwait() signal %d recd:", rc);
             }
         }
         int q_size = o.http_worker_Q->size();
